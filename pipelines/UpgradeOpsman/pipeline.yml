resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: installation
  type: gcs-resource
  source:
#    bucket: ((foundation))_installation_exports
    bucket: ((config_bucket))
    json_key: ((cloud_storage_key))
    versioned_file: ((foundation))-installation.zip

- name: state
  type: git
  source:
    branch: master
    uri: git@github.com:tonyelmore/gcp_lab01.git
    private_key: ((telmore-github-creds.private_key))

- name: configuration
  type: git
  source:
    branch: master
    uri: git@github.com:tonyelmore/gcp_lab01.git
    private_key: ((telmore-github-creds.private_key))

jobs:
- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

    - get: configuration
      trigger: true
    - get: state

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: "/concourse/((credhub-team))"
      INTERPOLATION_PATH: "environments/((iaas))/((foundation))/config/secrets"
    input_mapping:
      files: configuration

  - task: download-create-opsman
    image: platform-automation-image
    file: configuration/tasks-proposed/download-create-opsman.yml
    input_mapping:
      download-config: configuration
      state: state
      config: configuration
      vars: configuration
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/opsman.yml
      STATE_FILE: state/((iaas))/((foundation))/state.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

    ensure: &make-state-commit
      do:
        - task: make-commit
          image: platform-automation-image
          file: configuration/tasks-proposed/make-commit.yml
          input_mapping:
            repository: state
            file-source: generated-state
          output_mapping:
            repository-commit: state-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: state/((iaas))/((foundation))/state.yml
            GIT_AUTHOR_EMAIL: "tony@tonyelmore.com"
            GIT_AUTHOR_NAME: "Platform Automation"
            COMMIT_MESSAGE: 'Update state file'
        - put: state
          params:
            repository: state-commit
            merge: true

  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 20
    input_mapping:
      env: interpolated-files
      config: interpolated-files
    params:
      ENV_FILE: environments/((iaas)/((foundation))/config/secrets/env.yml
      AUTH_CONFIG_FILE: environments/((iaas)/((foundation))/config/secrets/auth.yml

  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((iaas)/((foundation))/config/secrets/env.yml
      DIRECTOR_CONFIG_FILE: environments/((iaas)/((foundation))/config/templates/director.yml
      VARS_FILES: |
        vars/environments/((iaas)/((foundation))/config/vars/director.yml 
        secrets/environments/((iaas)/((foundation))/config/secrets/director.yml

  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml




- name: export-installation
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ install-opsman ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
  - put: installation
    params:
      file: installation/installation-*.zip








- name: upgrade-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ export-installation ]
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: installation
      passed: [ export-installation ]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-upgrade-opsman
    image: platform-automation-image
    file: configuration/ci/tasks-proposed/download-upgrade-opsman.yml
    input_mapping:
      download-config: configuration
      state: state
      config: configuration
      vars: configuration
      secrets: interpolated-files
      installation: installation
      env: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/opsman.yml
      STATE_FILE: state/((iaas))/((foundation))/state.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml
      ENV_FILE: |
        environments/((iaas))/((foundation))/config/secrets/env.yml
    
    ensure: *make-state-commit

  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
