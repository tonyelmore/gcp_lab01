product-name: p-redis
network-properties:
  network:
    name: ((network_name))
  service_network:
    name: ((service_network_name))
  other_availability_zones:
  - name: ((singleton_availability_zone))
  singleton_availability_zone:
    name: ((singleton_availability_zone))
product-properties:
  .cf-redis-broker.redis_maxmemory:
    value: ((cf-redis-broker/redis_maxmemory))
  .cf-redis-broker.service_instance_limit:
    value: ((cf-redis-broker/service_instance_limit))
  .properties.backups_selector:
    value: No Backups
  .properties.canary_org_space_selector:
    value: "No"
  .properties.delete_dedicated_instances_multi_select:
    value:
    - I understand the risk
  .properties.large_plan_selector:
    value: Plan Active
  .properties.large_plan_selector.active.az_single_select:
    value: ((large_plan_selector/active/az_single_select))
  .properties.large_plan_selector.active.cf_service_access:
    value: ((large_plan_selector/active/cf_service_access))
  .properties.large_plan_selector.active.description:
    value: ((large_plan_selector/active/description))
  .properties.large_plan_selector.active.instance_limit:
    value: ((large_plan_selector/active/instance_limit))
  .properties.large_plan_selector.active.lua_scripting:
    value: ((large_plan_selector/active/lua_scripting))
  .properties.large_plan_selector.active.maxclients:
    value: ((large_plan_selector/active/maxclients))
  .properties.large_plan_selector.active.name:
    value: ((large_plan_selector/active/name))
  .properties.large_plan_selector.active.tcp_keepalive:
    value: ((large_plan_selector/active/tcp_keepalive))
  .properties.large_plan_selector.active.timeout:
    value: ((large_plan_selector/active/timeout))
  .properties.medium_plan_selector:
    value: Plan Active
  .properties.medium_plan_selector.active.az_single_select:
    value: ((medium_plan_selector/active/az_single_select))
  .properties.medium_plan_selector.active.cf_service_access:
    value: ((medium_plan_selector/active/cf_service_access))
  .properties.medium_plan_selector.active.description:
    value: ((medium_plan_selector/active/description))
  .properties.medium_plan_selector.active.instance_limit:
    value: ((medium_plan_selector/active/instance_limit))
  .properties.medium_plan_selector.active.lua_scripting:
    value: ((medium_plan_selector/active/lua_scripting))
  .properties.medium_plan_selector.active.maxclients:
    value: ((medium_plan_selector/active/maxclients))
  .properties.medium_plan_selector.active.name:
    value: ((medium_plan_selector/active/name))
  .properties.medium_plan_selector.active.tcp_keepalive:
    value: ((medium_plan_selector/active/tcp_keepalive))
  .properties.medium_plan_selector.active.timeout:
    value: ((medium_plan_selector/active/timeout))
  .properties.metrics_polling_interval:
    value: ((metrics_polling_interval))
  .properties.small_plan_selector:
    value: Plan Active
  .properties.small_plan_selector.active.az_single_select:
    value: ((small_plan_selector/active/az_single_select))
  .properties.small_plan_selector.active.cf_service_access:
    value: ((small_plan_selector/active/cf_service_access))
  .properties.small_plan_selector.active.description:
    value: ((small_plan_selector/active/description))
  .properties.small_plan_selector.active.instance_limit:
    value: ((small_plan_selector/active/instance_limit))
  .properties.small_plan_selector.active.lua_scripting:
    value: ((small_plan_selector/active/lua_scripting))
  .properties.small_plan_selector.active.maxclients:
    value: ((small_plan_selector/active/maxclients))
  .properties.small_plan_selector.active.name:
    value: ((small_plan_selector/active/name))
  .properties.small_plan_selector.active.tcp_keepalive:
    value: ((small_plan_selector/active/tcp_keepalive))
  .properties.small_plan_selector.active.timeout:
    value: ((small_plan_selector/active/timeout))
  .properties.syslog_selector:
    value: Yes without encryption
  .properties.syslog_selector.active.syslog_address:
    value: ((syslog_selector/active/syslog_address))
  .properties.syslog_selector.active.syslog_port:
    value: ((syslog_selector/active/syslog_port))
  .properties.syslog_selector.active.syslog_transport:
    value: ((syslog_selector/active/syslog_transport))
  .redis-on-demand-broker.maximum_parallel_upgrades:
    value: ((redis-on-demand-broker/maximum_parallel_upgrades))
  .redis-on-demand-broker.service_instance_limit:
    value: ((redis-on-demand-broker/service_instance_limit))
  .redis-on-demand-broker.service_instance_sharing:
    value: ((redis-on-demand-broker/service_instance_sharing))
  .redis-on-demand-broker.upgrade_canary_number:
    value: ((redis-on-demand-broker/upgrade_canary_number))
resource-config:
  cf-redis-broker:
    instance_type:
      id: ((cf-redis-broker_instance_type))
    persistent_disk:
      size_mb: ((cf-redis-broker_persistent_disk_size))
  redis-on-demand-broker:
    instance_type:
      id: ((redis-on-demand-broker_instance_type))
    instances: ((redis-on-demand-broker_instances))
errand-config:
  broker-deregistrar:
    post-deploy-state: ((broker-deregistrar_post_deploy_state))
    pre-delete-state: ((broker-deregistrar_pre_delete_state))
  broker-registrar:
    post-deploy-state: ((broker-registrar_post_deploy_state))
    pre-delete-state: ((broker-registrar_pre_delete_state))
  cleanup-metadata-if-dedicated-disabled:
    post-deploy-state: ((cleanup-metadata-if-dedicated-disabled_post_deploy_state))
    pre-delete-state: ((cleanup-metadata-if-dedicated-disabled_pre_delete_state))
  delete-all-service-instances-and-deregister-broker:
    post-deploy-state: ((delete-all-service-instances-and-deregister-broker_post_deploy_state))
    pre-delete-state: ((delete-all-service-instances-and-deregister-broker_pre_delete_state))
  deprecate-dedicated-vm-plan:
    post-deploy-state: ((deprecate-dedicated-vm-plan_post_deploy_state))
    pre-delete-state: ((deprecate-dedicated-vm-plan_pre_delete_state))
  on-demand-broker-smoke-tests:
    post-deploy-state: ((on-demand-broker-smoke-tests_post_deploy_state))
    pre-delete-state: ((on-demand-broker-smoke-tests_pre_delete_state))
  register-broker:
    post-deploy-state: ((register-broker_post_deploy_state))
    pre-delete-state: ((register-broker_pre_delete_state))
  smoke-tests:
    post-deploy-state: ((smoke-tests_post_deploy_state))
    pre-delete-state: ((smoke-tests_pre_delete_state))
  upgrade-all-service-instances:
    post-deploy-state: ((upgrade-all-service-instances_post_deploy_state))
    pre-delete-state: ((upgrade-all-service-instances_pre_delete_state))
